{"version":3,"sources":["reducers/menuReducer.js","reducers/authReducer.js","reducers/alertReducer.js","reducers/index.js","configureStore.js","contexts/LoadingContext.js","contexts/AlertContext.js","components/Loading.js","components/Alert.js","components/Button.js","components/GoogleSignin.js","utils/PersistorPurge.js","components/GoogleSignout.js","components/Input.js","components/LoadingSpinner.js","components/Modal.js","components/SmNav.js","components/DarkMode.js","components/NavProfile.js","components/Navigation.js","utils/axiosInstance.js","utils/errorResponseHandler.js","actions.js","utils/PrivateRoute.js","utils/Route.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","opened","dark_mode","menuReducer","state","action","type","TOGGLE_MENU","TOGGLE_DARKMODE","is_auth","access_token","refresh_token","id_token","data","authReducer","AUTH_SET","payload","token_type","AUTH_INVALIDATE","show","message","timeout","ALERT_SHOW","ALERT_HIDE","rootReducer","combineReducers","menuState","auth","alert","alertReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","LoadingContext","createContext","LoadingContextProvider","children","useState","currentOptions","setCurrentOptions","setShow","loadingRef","useRef","loadingProcess","useCallback","current_state","filter","v","loadingDone","useEffect","length","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Provider","value","alertOption","in","unmountOnExit","classNames","nodeRef","className","ref","options","isClickToPauseDisabled","Consumer","AlertContext","AlertContextProvider","forwardRef","close","title","onClose","usedAlert","setUsedAlert","alertRef","showAlert","newAlert","opt","newOptions","shift","Loading","props","icons","success","FaCheck","info","FaInfo","question","FaQuestion","fail","FaExclamation","colors","Alert","UsedIcon","used_color","iconState","setIconState","iconRef","setTimeout","onClick","role","aria-modal","CSSTransition","undefined","defaultProps","Button","GoogleSignin","dispatch","useDispatch","location","useLocation","history","useHistory","useContext","from","pathname","LOADING_GOOGLE_SIGNIN","onSuccess","res","a","profileObj","email","imageUrl","name","axiosInstance","post","tokenId","image","username","then","replace","catch","response","errorResponseHandler","signIn","useGoogleLogin","onFailure","console","log","clientId","process","isSignedIn","accessType","PersistorPurge","purgeStoredState","GoogleSignout","LOADING_SIGN_OUT","signOut","useGoogleLogout","onLogoutSuccess","tabIndex","Input","requiredFail","inputType","fails","InputGroup","label","LoadingSpinner","maxWidths","xs","sm","md","lg","xl","Modal","closing","width","maxWidth","aria-hidden","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","NavHamButton","useSelector","SwitchTransition","NavMenu","to","DarkMode","e","NavProfile","showUMenu","setShowUMenu","transitionRunning","setTransitionRunning","src","alt","referrerPolicy","onEnter","onEntered","onExit","onExited","Navigation","instance","axios","create","baseURL","interceptors","request","use","config","getState","dayjs","exp","diff","headers","Authorization","err","result","addAlert","errors","Array","isArray","forEach","i","statusText","PrivateRoute","rest","render","ItemPage","lazy","Home","Login","App","document","documentElement","classList","add","remove","basename","fallback","Route","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.534322d3.chunk.js","sourcesContent":["import { TOGGLE_DARKMODE, TOGGLE_MENU } from \"../actions\";\n\nconst initialState = { opened: false, dark_mode: false };\n\nconst menuReducer = (state = initialState, action) => {\n  if (action.type === TOGGLE_MENU) {\n    return {\n      ...state,\n      opened: !state.opened,\n    };\n  }\n\n  if (action.type === TOGGLE_DARKMODE) {\n    return {\n      ...state,\n      dark_mode: !state.dark_mode,\n    };\n  }\n\n  return state;\n};\n\nexport default menuReducer;\n","import { AUTH_SET, AUTH_INVALIDATE } from \"../actions\";\n\nconst initialState = {\n  is_auth: false,\n  access_token: null,\n  refresh_token: null,\n  id_token: null,\n  data: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  if (action.type === AUTH_SET) {\n    const payload = action.payload;\n\n    return {\n      ...state,\n      is_auth: payload.is_auth,\n      access_token: `${payload.token_type} ${payload.access_token}`,\n      refresh_token: payload.refresh_token,\n      id_token: payload.id_token,\n      data: payload.data,\n    };\n  }\n\n  if (action.type === AUTH_INVALIDATE) {\n    return {\n      ...state,\n      ...initialState,\n    };\n  }\n\n  return state;\n};\n\nexport default authReducer;\n","import { ALERT_SHOW, ALERT_HIDE } from \"../actions\";\n\nconst initialState = {\n  show: false,\n  message: null,\n  type: \"info\",\n  timeout: false,\n};\n\nconst authReducer = (state = initialState, action) => {\n  if (action.type === ALERT_SHOW) {\n    const payload = action.payload;\n\n    return {\n      ...state,\n      show: true,\n      message: payload.message,\n      type: payload.type ?? initialState.type,\n      timeout: payload.timeout ?? initialState.timeout,\n    };\n  }\n\n  if (action.type === ALERT_HIDE) {\n    return {\n      ...state,\n      show: false,\n    };\n  }\n\n  return state;\n};\n\nexport default authReducer;\n","import { combineReducers } from \"redux\";\nimport menuReducer from \"./menuReducer\";\nimport authReducer from \"./authReducer\";\nimport alertReducer from \"./alertReducer\";\n\nconst rootReducer = combineReducers({\n  menuState: menuReducer,\n  auth: authReducer,\n  alert: alertReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(persistedReducer);\nconst persistor = persistStore(store);\n\nexport { store, persistor, persistConfig };\n","import { createContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Lottie from \"@rookino/react-lottie-light\";\nimport animationData from \"../animations/69529-loading.json\";\nconst LoadingContext = createContext();\n\nexport const LoadingContextProvider = ({ children }) => {\n  const [currentOptions, setCurrentOptions] = useState([]);\n  const [show, setShow] = useState(false);\n  const loadingRef = useRef(null);\n\n  const loadingProcess = useCallback(\n    (data) => {\n      setCurrentOptions((current_state) => [\n        ...current_state.filter((v) => v !== data),\n        data,\n      ]);\n    },\n    [setCurrentOptions]\n  );\n\n  const loadingDone = useCallback(\n    (data) => {\n      setCurrentOptions((current_state) => [\n        ...current_state.filter((v) => v !== data),\n      ]);\n    },\n    [setCurrentOptions]\n  );\n\n  useEffect(() => {\n    if (currentOptions.length) {\n      setShow(true);\n    } else {\n      setShow(false);\n    }\n  }, [currentOptions]);\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  return (\n    <LoadingContext.Provider\n      value={{ alertOption: currentOptions, loadingProcess, loadingDone }}\n    >\n      {children}\n      <CSSTransition\n        in={show}\n        unmountOnExit\n        timeout={100}\n        classNames=\"loading\"\n        nodeRef={loadingRef}\n      >\n        <div className=\"fixed z-50 inset-0 flex justify-center items-center\">\n          <div className=\"absolute inset-0 bg-gray-800 bg-opacity-70\"></div>\n          <div className=\"w-64 h-64\" ref={loadingRef}>\n            <Lottie options={defaultOptions} isClickToPauseDisabled={true} />\n          </div>\n        </div>\n      </CSSTransition>\n    </LoadingContext.Provider>\n  );\n};\n\nexport const LoadingConsumer = LoadingContext.Consumer;\n\nexport default LoadingContext;\n","import {\n  createContext,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Alert } from \"../components\";\n\nconst AlertContext = createContext();\n\nexport const AlertContextProvider = forwardRef(({ children }, ref) => {\n  const [currentOptions, setCurrentOptions] = useState([]);\n  const [usedAlert, setUsedAlert] = useState({\n    close: () => {},\n    title: ``,\n    type: `question`,\n    message: `What alert is this?`,\n    onClose: () => {},\n  });\n  const [show, setShow] = useState(false);\n  const alertRef = useRef(null);\n\n  const showAlert = useCallback(\n    (newAlert) => {\n      setCurrentOptions((opt) => [...opt, newAlert]);\n    },\n    [setCurrentOptions]\n  );\n\n  const handleClose = () => {\n    const newOptions = [...currentOptions];\n    newOptions.shift();\n    setCurrentOptions(newOptions);\n    setShow(false);\n  };\n\n  useEffect(() => {\n    if (currentOptions.length) {\n      setUsedAlert(currentOptions[0]);\n      setShow(true);\n    }\n  }, [currentOptions]);\n\n  return (\n    <AlertContext.Provider value={{ alertOption: currentOptions, showAlert }}>\n      {children}\n      <CSSTransition\n        in={show}\n        unmountOnExit\n        timeout={200}\n        classNames=\"alert\"\n        nodeRef={alertRef}\n      >\n        <Alert ref={alertRef} {...usedAlert} close={handleClose} />\n      </CSSTransition>\n    </AlertContext.Provider>\n  );\n});\n\nexport const AlertConsumer = AlertContext.Consumer;\n\nexport default AlertContext;\n","const Loading = (props) => {\n  return (\n    <div className=\"fixed inset-0 z-50 filter backdrop-filter backdrop-blur-md flex justify-center items-center\">\n      <span className=\"animate-ping absolute h-40 w-40 rounded-full bg-yellow-400 opacity-75\"></span>\n      <span className=\"relative rounded-full h-40 w-40 bg-yellow-500 flex justify-center items-center\">\n        <span className=\"text-center text-2xl font-bold text-white\">OmahQ</span>\n      </span>\n    </div>\n  );\n};\n\nexport default Loading;\n","import { forwardRef, useEffect, useRef, useState } from \"react\";\nimport { FaCheck, FaInfo, FaQuestion, FaExclamation } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst icons = {\n  success: FaCheck,\n  info: FaInfo,\n  question: FaQuestion,\n  fail: FaExclamation,\n};\n\nconst colors = {\n  success: \"text-green-300\",\n  info: \"text-green-300\",\n  question: \"text-yellow-300\",\n  fail: \"text-red-300\",\n};\n\nconst Alert = forwardRef(({ message, close, onClose, title, type }, ref) => {\n  const UsedIcon = icons[type] ?? false;\n  const used_color = colors[type];\n  const [iconState, setIconState] = useState(false);\n  const iconRef = useRef(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIconState(true);\n    }, 200);\n  }, [iconState]);\n\n  const handleClosing = () => {\n    close();\n    onClose();\n  };\n\n  return (\n    <div\n      onClick={handleClosing}\n      className=\"absolute inset-0 bg-gray-500 bg-opacity-40 backdrop-filter backdrop-blur-sm flex z-50 justify-center items-start\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <div\n        ref={ref}\n        className=\"bg-white dark:bg-gray-800 w-full mx-4 sm:w-96 h-32 rounded-xl shadow-xl my-20 flex overflow-hidden\"\n      >\n        <div className=\"place-self-center mx-4\">\n          <div className=\"w-20 h-20\">\n            <CSSTransition\n              in={iconState}\n              timeout={300}\n              unmountOnExit\n              classNames=\"alert-icon\"\n              nodeRef={iconRef}\n            >\n              <div ref={iconRef}>\n                {UsedIcon ? (\n                  <IconContext.Provider\n                    value={{ className: `${used_color} w-full h-full` }}\n                  >\n                    <UsedIcon />\n                  </IconContext.Provider>\n                ) : undefined}\n              </div>\n            </CSSTransition>\n          </div>\n        </div>\n        <div className=\"flex-1 flex flex-col items-start m-2 space-y-4\">\n          <div className=\"text-lg text-gray-600 dark:text-gray-100 font-medium\">\n            {title}\n          </div>\n          <div className=\"text-xl text-gray-800 dark:text-gray-50 font-bold\">\n            {message}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nAlert.defaultProps = {\n  close: () => {},\n  title: ``,\n  type: `question`,\n  message: `What alert is this?`,\n  onClose: () => {},\n};\n\nexport default Alert;\n","const colorClasses = {\n  gray: \"border-gray-200 hover:border-gray-400 bg-gray-200 active:bg-gray-400\",\n  blue: \"border-blue-200 hover:border-blue-400 bg-blue-200 active:bg-blue-400\",\n  red: \"border-red-200 hover:border-red-400 bg-red-200 active:bg-red-400\",\n  green:\n    \"border-green-200 hover:border-green-400 bg-green-200 active:bg-green-400\",\n  yellow:\n    \"border-yellow-200 hover:border-yellow-400 bg-yellow-200 active:bg-yellow-400\",\n  indigo:\n    \"border-indigo-200 hover:border-indigo-400 bg-indigo-200 active:bg-indigo-400\",\n  purple:\n    \"border-purple-200 hover:border-purple-400 bg-purple-200 active:bg-purple-400\",\n  pink: \"border-pink-200 hover:border-pink-400 bg-pink-200 active:bg-pink-400\",\n};\n\n//TODO: onClick event handling\nfunction Button(props) {\n  const colorClass = colorClasses[props.color ?? \"gray\"];\n  const addClass = props.addClass ?? \"\";\n  return (\n    <button\n      className={`rounded px-2 py-1 focus:outline-none border-2 ${addClass} ${colorClass}`}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nexport default Button;\n","import { useGoogleLogin } from \"react-google-login\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { IconContext } from \"react-icons\";\nimport axiosInstance from \"../utils/axiosInstance\";\nimport { useDispatch } from \"react-redux\";\nimport { AUTH_SET } from \"../actions\";\nimport { useLocation, useHistory } from \"react-router\";\nimport errorResponseHandler from \"../utils/errorResponseHandler\";\nimport { useContext } from \"react\";\nimport AlertContext from \"../contexts/AlertContext\";\nimport LoadingContext from \"../contexts/LoadingContext\";\n\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nfunction GoogleSignin() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const { showAlert } = useContext(AlertContext);\n  const { loadingProcess, loadingDone } = useContext(LoadingContext);\n  const { from } = location.state || { from: { pathname: \"/\" } };\n  const LOADING_GOOGLE_SIGNIN = \"LOADING_GOOGLE_SIGNIN\";\n\n  const onSuccess = async (res) => {\n    const { email, imageUrl, name } = res.profileObj;\n    await axiosInstance\n      .post(\"/auth/google\", {\n        id_token: res.tokenId,\n        email,\n        image: imageUrl,\n        name,\n        username: email,\n      })\n      .then((res) => {\n        const { ...data } = res.data;\n        dispatch({\n          type: AUTH_SET,\n          payload: { is_auth: true, ...data },\n        });\n        history.replace(from);\n      })\n      .catch(({ response }) => {\n        errorResponseHandler(response, showAlert);\n      });\n    loadingDone(LOADING_GOOGLE_SIGNIN);\n  };\n\n  const onFailure = (res) => {\n    console.log(res);\n  };\n\n  const { signIn } = useGoogleLogin({\n    onSuccess,\n    onFailure,\n    clientId: CLIENT_ID,\n    isSignedIn: true,\n    accessType: \"offline\",\n  });\n\n  const handleAction = () => {\n    loadingProcess(LOADING_GOOGLE_SIGNIN);\n    signIn();\n  };\n\n  return (\n    <button\n      onClick={handleAction}\n      className={`text-blue-600 bg-white hover:bg-gray-300 active:bg-gray-100\n      dark:text-gray-50 dark:bg-gray-800 dark:hover:bg-gray-700 dark:active:bg-gray-900 transition duration-300\n      w-full border-0 py-2 px-8 shadow-lg focus:outline-none font-medium rounded text-xl relative`}\n    >\n      <IconContext.Provider value={{ className: `w-8 h-8 left-4 absolute` }}>\n        <FcGoogle />\n      </IconContext.Provider>\n      <span>Sign In</span>\n    </button>\n  );\n}\n\nexport default GoogleSignin;\n","import { purgeStoredState } from \"redux-persist\";\nimport { persistConfig } from \"../configureStore\";\n\nconst PersistorPurge = () => {\n  purgeStoredState(persistConfig);\n};\n\nexport default PersistorPurge;\n","import { useGoogleLogout } from \"react-google-login\";\nimport PersistorPurge from \"../utils/PersistorPurge\";\nimport { useLocation, useHistory } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { AUTH_INVALIDATE } from \"../actions\";\nimport { useContext } from \"react\";\nimport LoadingContext from \"../contexts/LoadingContext\";\n\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\n\nconst GoogleSignout = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const { loadingProcess, loadingDone } = useContext(LoadingContext);\n  const { from } = location.state || { from: { pathname: \"/login\" } };\n  const LOADING_SIGN_OUT = \"LOADING_SIGN_OUT\";\n\n  const onLogoutSuccess = () => {\n    dispatch({ type: AUTH_INVALIDATE });\n    PersistorPurge();\n    history.replace(from);\n    loadingDone(LOADING_SIGN_OUT);\n  };\n\n  const onFailure = (res) => {\n    console.log(res);\n  };\n\n  const { signOut } = useGoogleLogout({\n    clientId: CLIENT_ID,\n    onLogoutSuccess,\n    onFailure,\n  });\n\n  const handleAction = () => {\n    loadingProcess(LOADING_SIGN_OUT);\n    signOut();\n  };\n\n  return (\n    <button\n      onClick={handleAction}\n      className=\"block w-full text-left hover:text-gray-400 text-gray-700 dark:text-gray-100 dark:hover:text-gray-300 transition-colors ease-in-out px-4 py-2 text-sm\"\n      tabIndex=\"-1\"\n    >\n      Sign Out\n    </button>\n  );\n};\n\nexport default GoogleSignout;\n","import { forwardRef } from \"react\";\n\nconst Input = forwardRef(({ type, requiredFail, ...props }, ref) => {\n  const inputType = type ?? \"text\";\n  const fails = requiredFail ? `border-red-300` : ``;\n\n  return (\n    <input\n      ref={ref}\n      type={inputType}\n      {...props}\n      className={`px-2 py-1 rounded border-2 bg-transparent focus:outline-none  w-full ${fails}\n      border-gray-300 focus:border-blue-300 dark:border-gray-600 dark:focus:border-blue-800\n      text-gray-800 dark:text-gray-100`}\n    />\n  );\n});\n\nInput.defaultProps = {\n  type: \"text\",\n};\n\nconst InputGroup = ({ children, label, ...props }) => {\n  return (\n    <div className=\"mb-4 flex flex-col space-y-2\">\n      <span className=\"text-base text-gray-900 dark:text-gray-50 font-semibold\">\n        {label}\n      </span>\n      {children}\n    </div>\n  );\n};\n\nexport { Input, InputGroup };\n","const LoadingSpinner = () => {\n  return (\n    <div className=\"ease-linear rounded-full border-t-2 animate-spin border-yellow-500 w-12 h-12\"></div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { forwardRef } from \"react\";\n\nconst maxWidths = {\n  xs: \"sm:max-w-xs\",\n  sm: \"sm:max-w-sm\",\n  md: \"sm:max-w-md\",\n  lg: \"sm:max-w-lg\",\n  xl: \"sm:max-w-xl\",\n  \"2xl\": \"sm:max-w-2xl\",\n};\n\nconst Modal = forwardRef(\n  ({ children, closing, title, width, ...props }, ref) => {\n    const maxWidth = maxWidths[width];\n    return (\n      <div\n        className=\"fixed z-40 sm:pt-10 inset-0 overscroll-y-auto\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n      >\n        <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <div\n            onClick={() => closing()}\n            className=\"fixed inset-0 backdrop-filter backdrop-blur bg-gray-900 bg-opacity-50\"\n            aria-hidden=\"true\"\n          ></div>\n          <div\n            ref={ref}\n            className={`inline-block align-bottom bg-white dark:bg-gray-700 rounded-lg text-left overflow-hidden filter drop-shadow-3xl transform transition-all w-full ${maxWidth} my-8`}\n          >\n            <div className=\"pb-2 pt-1 flex flex-col\">\n              <div className=\"w-full mb-4 px-2\">\n                <span className=\"text-2xl text-gray-900 dark:text-gray-50 font-bold px-1\">\n                  {title}\n                </span>\n                <button\n                  onClick={() => closing()}\n                  className=\"absolute right-0 mx-1 focus:outline-none hover:bg-red-200 active:bg-red-100 hover:text-red-600 text-gray-900 dark:text-gray-50 dark:hover:bg-red-500 dark:active:bg-red-600 dark:hover:text-red-200 transition duration-500 ease-in-out rounded-xl p-1\"\n                >\n                  <svg\n                    className=\"h-6 w-6\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                    aria-hidden=\"true\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M6 18L18 6M6 6l12 12\"\n                    />\n                  </svg>\n                </button>\n              </div>\n              <div className=\"w-full px-2 pb-1\">{children}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nModal.defaultProps = {\n  closing: () => {},\n  title: \"\",\n  width: \"lg\",\n};\n\nexport default Modal;\n","import { CSSTransition, SwitchTransition } from \"react-transition-group\";\nimport \"./SmNav.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TOGGLE_MENU } from \"../actions\";\nimport { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavHamButton = () => {\n  const state = useSelector((state) => state.menuState);\n  const dispatch = useDispatch();\n  const ref = useRef(null);\n  const handleMenuOpen = () => {\n    dispatch({ type: TOGGLE_MENU, payload: false });\n  };\n\n  return (\n    <SwitchTransition>\n      <CSSTransition\n        key={state.opened}\n        timeout={200}\n        nodeRef={ref}\n        classNames=\"fade\"\n      >\n        <button\n          ref={ref}\n          onClick={() => handleMenuOpen()}\n          className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white transition-colors duration-200 ease-in-out\"\n        >\n          <span className=\"sr-only\">Open main menu</span>\n          {state.opened ? (\n            <div>\n              <svg\n                className=\"h-6 w-6\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </div>\n          ) : (\n            <svg\n              className=\"h-6 w-6\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M4 6H16M4 12h16M4 18h16\"\n              />\n            </svg>\n          )}\n        </button>\n      </CSSTransition>\n    </SwitchTransition>\n  );\n};\n\nconst NavMenu = (props) => {\n  const state = useSelector((state) => state.menuState);\n  const ref = useRef(null);\n\n  return (\n    <CSSTransition\n      in={state.opened}\n      timeout={200}\n      classNames=\"nav-menu\"\n      unmountOnExit\n      nodeRef={ref}\n    >\n      <div ref={ref} className={`sm:hidden origin-top`}>\n        <div className=\"pt-2 pb-3 space-y-1\">\n          <Link to=\"/\">\n            <button className=\"text-lg w-full hover:bg-indigo-100 border-l-2 border-indigo-400 block text-left px-3 py-2\">\n              Home\n            </button>\n          </Link>\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport { NavHamButton, NavMenu };\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { TOGGLE_DARKMODE } from \"../actions\";\n\nconst DarkMode = () => {\n  const menuState = useSelector((state) => state.menuState);\n  const dispatch = useDispatch();\n\n  /**\n   * Handle the toggle action for `dark mode`.\n   *\n   * @param {Event} e click event\n   */\n  const handleToggle = (e) => {\n    dispatch({ type: TOGGLE_DARKMODE });\n  };\n\n  return (\n    <div\n      onClick={handleToggle}\n      className={`rounded-full text-xs active:bg-gray-50 cursor-pointer  w-10 border-2 border-gray-200 dark:border-gray-500 flex ${\n        menuState.dark_mode\n          ? \"flex-row-reverse bg-gray-500\"\n          : \"flex-row bg-gray-200\"\n      } justify-between hover:bg-gray-400 transition duration-300`}\n    >\n      {menuState.dark_mode ? `🌑` : `☀️`}\n    </div>\n  );\n};\n\nexport default DarkMode;\n","import { useState, useRef } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport DarkMode from \"./DarkMode\";\nimport GoogleSignout from \"./GoogleSignout\";\nimport \"./NavProfile.css\";\n\nconst NavProfile = (props) => {\n  const [showUMenu, setShowUMenu] = useState(false);\n  const [transitionRunning, setTransitionRunning] = useState(false);\n\n  const nodeRef = useRef(null);\n  const handleBlur = (e) => {\n    if (!transitionRunning) setShowUMenu(false);\n  };\n  return (\n    <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto ms:ml-6 sm:pr-0\">\n      <div className=\"ml-6 relative\">\n        <button className=\"hover:text-gray-400 text-black dark:text-gray-100 dark:hover:text-gray-400 transition-colors duration-300 ease-in-out\">\n          Permadi Afrian\n        </button>\n      </div>\n      <div className=\"ml-2 relative z-30\">\n        <div>\n          <button\n            onClick={() => {\n              if (!transitionRunning) setShowUMenu(!showUMenu);\n            }}\n            className=\"bg-gray-800 hover:opacity-50 transition ease-in-out duration-300 flex text-sm rounded-full focus:outline-none\"\n          >\n            <span className=\"sr-only\">Open user menu</span>\n            <img\n              className=\"h-8 w-8 rounded-full\"\n              src=\"https://lh3.googleusercontent.com/ogw/ADea4I4MEreOB7k5NFiJl6BChAyid8lU1w6uXM4cicijfQ=s83-c-mo\"\n              alt=\"\"\n              referrerPolicy=\"no-referrer\"\n            />\n          </button>\n        </div>\n        <CSSTransition\n          in={showUMenu}\n          timeout={300}\n          classNames=\"umenu\"\n          onEnter={() => setTransitionRunning(true)}\n          onEntered={() => setTransitionRunning(false)}\n          onExit={() => setTransitionRunning(true)}\n          onExited={() => setTransitionRunning(false)}\n          unmountOnExit\n          nodeRef={nodeRef}\n        >\n          <div ref={nodeRef}>\n            <div\n              onClick={() => handleBlur()}\n              className=\"fixed inset-0\"\n              aria-hidden=\"true\"\n            ></div>\n            <div\n              className={`block text-right origin-top-right absolute right-0 mt-2 w-36 sm:w-28 rounded-md shadow-lg py-1 bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5 focus:outline-none`}\n              tabIndex=\"-1\"\n            >\n              <div className=\"block px-4 py-2 w-full\" tabIndex=\"-1\">\n                <DarkMode />\n              </div>\n              <GoogleSignout />\n            </div>\n          </div>\n        </CSSTransition>\n      </div>\n    </div>\n  );\n};\n\nexport default NavProfile;\n","import { NavHamButton, NavMenu } from \"./SmNav\";\nimport NavProfile from \"./NavProfile\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = () => {\n  return (\n    <div className=\"w-full bg-white dark:bg-gray-800 shadow-lg px-2 sm:px-6 lg:px-8\">\n      <div className=\"relative max-w-5xl mx-auto h-16 flex items-center justify-between\">\n        <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n          <NavHamButton />\n        </div>\n        <div className=\"flex-1 flex self-stretch justify-center sm:items-stretch sm:justify-start\">\n          <div className=\"hidden sm:block sm:ml-6\">\n            <div className=\"flex h-full space-x-4\">\n              <Link to=\"/\">\n                <button className=\"text-lg h-full focus:outline-none border-b-2 border-blue-400 text-black hover:text-gray-400 dark:text-gray-100 dark:hover:text-gray-400 transition duration-300 ease-in-out text-center px-3 py-2\">\n                  Home\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <NavProfile />\n      </div>\n      <NavMenu />\n    </div>\n  );\n};\n\nexport default Navigation;\n","import axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport { AUTH_SET } from \"../actions\";\nimport { store } from \"../configureStore\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_API_URL,\n});\n\ninstance.interceptors.request.use(async (config) => {\n  const { auth } = store.getState();\n  if (auth.is_auth) {\n    if (dayjs(auth.data.exp * 1000).diff(dayjs()) < 1) {\n      const result = await axios\n        .post(\n          `/auth/refresh`,\n          {\n            refresh_token: auth.refresh_token,\n          },\n          {\n            baseURL: process.env.REACT_APP_BASE_API_URL,\n            headers: {\n              Authorization: auth.access_token,\n            },\n          }\n        )\n        .then((res) => {\n          const { data } = res;\n          store.dispatch({\n            type: AUTH_SET,\n            payload: {\n              ...auth,\n              access_token: data.access_token,\n              token_type: data.token_type,\n              data: data.data,\n            },\n          });\n          return data;\n        })\n        .catch((err) => {\n          console.log(err);\n          return false;\n        });\n      if (result)\n        config.headers.Authorization = `${result.token_type} ${result.access_token}`;\n    } else {\n      config.headers.Authorization = auth.access_token;\n    }\n  }\n  return config;\n});\n\nexport default instance;\n","export default function errorResponseHandler(response, addAlert = () => {}) {\n  try {\n    const { errors } = response.data;\n    if (errors) {\n      if (Array.isArray(errors)) {\n        errors.forEach((v, i) => {\n          addAlert({\n            message: v.message,\n            title: response.statusText,\n            type: \"fail\",\n          });\n        });\n      } else {\n        addAlert({\n          message: errors.message,\n          title: response.statusText,\n          type: \"fail\",\n        });\n      }\n    }\n  } catch (e) {\n    console.log(`errorResponseHandle Malfunctioned: ${e.message}`);\n  }\n}\n","const TOGGLE_MENU = \"TOGGLE_MENU\";\nconst TOGGLE_DARKMODE = \"TOGGLE_DARKMODE\";\nconst AUTH_SET = \"AUTH_SET\";\nconst AUTH_INVALIDATE = \"AUTH_INVALIDATE\";\nconst ALERT_SHOW = \"ALERT_SHOW\";\nconst ALERT_HIDE = \"ALERT_HIDE\";\n\nexport {\n  TOGGLE_MENU,\n  TOGGLE_DARKMODE,\n  AUTH_SET,\n  AUTH_INVALIDATE,\n  ALERT_SHOW,\n  ALERT_HIDE,\n};\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({ children, ...rest }) => {\n  const auth = useSelector((state) => state.auth);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.is_auth ? (\n          children\n        ) : (\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({ children, ...rest }) => {\n  const auth = useSelector((state) => state.auth);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !auth.is_auth ? (\n          children\n        ) : (\n          <Redirect to={{ pathname: \"/\", state: { from: location } }} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import { useEffect } from \"react\";\nimport { lazy } from \"react\";\nimport { Suspense } from \"react-is\";\nimport { useSelector } from \"react-redux\";\nimport { HashRouter, Switch } from \"react-router-dom\";\nimport { AlertContextProvider } from \"./contexts/AlertContext\";\nimport { LoadingContextProvider } from \"./contexts/LoadingContext\";\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport Route from \"./utils/Route\";\nconst ItemPage = lazy(() => import(\"./pages/item\"));\nconst Home = lazy(() => import(\"./pages/home\"));\nconst Login = lazy(() => import(\"./pages/Login\"));\n\nfunction App() {\n  const menuState = useSelector((state) => state.menuState);\n  useEffect(() => {\n    if (menuState.dark_mode) {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n  }, [menuState]);\n\n  return (\n    <HashRouter basename=\"/\">\n      <AlertContextProvider>\n        <LoadingContextProvider>\n          <div>\n            <Suspense fallback={<div></div>}>\n              <Switch>\n                <Route path=\"/login\">\n                  <Login />\n                </Route>\n                <PrivateRoute path=\"/house/:id\">\n                  <ItemPage />\n                </PrivateRoute>\n                <PrivateRoute path=\"/\">\n                  <Home />\n                </PrivateRoute>\n              </Switch>\n            </Suspense>\n          </div>\n        </LoadingContextProvider>\n      </AlertContextProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./configureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Loading from \"./components/Loading\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<Loading />} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}